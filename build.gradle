plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'

	/**
	 * AsciiDoctor
	 **/
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'cat.community'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt
}

repositories {
	mavenCentral()

	/* Vue build */
	gradlePluginPortal()
}

dependencies {
	/**
	 * Spring Framework
	 **/
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-tomcat'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-mustache'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	/**
	 * AWS
	 */
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation 'software.amazon.awssdk:s3:2.25.1'

	/**
	 * Lombok
	 **/
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	/**
	 * scrypt
	 **/
	implementation 'org.springframework.security:spring-security-crypto'
	implementation 'org.bouncycastle:bcprov-jdk15on:1.70'

	/**
	 * File Upload
	 **/
	implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.4'

	/**
	 * MySQL, Redis
	 **/
	implementation 'mysql:mysql-connector-java:8.0.26'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'

	/**
	 * QueryDSL
	 **/
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	/**
	 * AsciiDOC - SpringRESTDOC
	 **/
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.6.RELEASE'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.6.RELEASE'

	/**
	 * JWT
	 **/
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	/**
	 * GSON
	 **/
	implementation 'com.google.code.gson:gson:2.8.9'

	/**
	 * Webflux
	 **/
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
}

ext {
	snippetsDir = file('build/generated-snippets')
}

test {
	useJUnitPlatform()
	scanForTestClasses = false
	include "**/*Test.class"
	outputs.dir snippetsDir
}

asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'
	dependsOn test
}

bootJar {
	enabled = true
	dependsOn asciidoctor

	copy {
		from asciidoctor.outputDir
		into "src/main/resources/templates/docs"
	}
}

jar {
	enabled = false
}